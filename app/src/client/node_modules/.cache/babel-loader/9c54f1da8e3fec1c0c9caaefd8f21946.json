{"ast":null,"code":"var _jsxFileName = \"/home/karolinag/Documents/ssr2A/healthchain/client/src/components/DoctorView.jsx\";\nimport React, { useEffect, useRef } from \"react\";\nimport ReactDOM from 'react-dom';\nimport PatientsOverview from \"./PatientsOverview\";\n\nconst DoctorView = ({\n  contract,\n  accounts,\n  accountId\n}) => {\n  const doctorViewRef = useRef();\n  useEffect(() => {\n    const patients = [];\n\n    const buildPatientsOverview = async () => {\n      const doctorsPermissions = await contract.methods.getDoctorsPermissions(accounts[accountId]).call({\n        from: accounts[accountId],\n        gas: 100000\n      });\n      const seenAddresses = [];\n      doctorsPermissions.map(async (address, _) => {\n        if (!seenAddresses.includes(address)) {\n          seenAddresses.push(address);\n          const documents = await contract.methods.getDocuments(address).call({\n            from: accounts[accountId],\n            gas: 100000\n          });\n          patients.push({\n            address: address,\n            documents: documents\n          });\n        }\n      });\n    };\n\n    buildPatientsOverview();\n    setTimeout(() => {\n      ReactDOM.render(React.createElement(PatientsOverview, {\n        patients: patients,\n        doctorsAddress: accounts[accountId],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), doctorViewRef.current);\n    }, 500);\n    /* eslint-disable-next-line */\n  }, []);\n  return React.createElement(\"div\", {\n    ref: doctorViewRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n};\n\nexport default DoctorView;","map":{"version":3,"sources":["/home/karolinag/Documents/ssr2A/healthchain/client/src/components/DoctorView.jsx"],"names":["React","useEffect","useRef","ReactDOM","PatientsOverview","DoctorView","contract","accounts","accountId","doctorViewRef","patients","buildPatientsOverview","doctorsPermissions","methods","getDoctorsPermissions","call","from","gas","seenAddresses","map","address","_","includes","push","documents","getDocuments","setTimeout","render","current"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA;AAAtB,CAAD,KAAuC;AACxD,QAAMC,aAAa,GAAGP,MAAM,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,QAAQ,GAAG,EAAjB;;AACA,UAAMC,qBAAqB,GAAG,YAAY;AACxC,YAAMC,kBAAkB,GAAG,MAAMN,QAAQ,CAACO,OAAT,CAAiBC,qBAAjB,CAAuCP,QAAQ,CAACC,SAAD,CAA/C,EAA4DO,IAA5D,CAAiE;AAAEC,QAAAA,IAAI,EAAET,QAAQ,CAACC,SAAD,CAAhB;AAA6BS,QAAAA,GAAG,EAAE;AAAlC,OAAjE,CAAjC;AACA,YAAMC,aAAa,GAAG,EAAtB;AACAN,MAAAA,kBAAkB,CAACO,GAAnB,CAAuB,OAAOC,OAAP,EAAgBC,CAAhB,KAAsB;AAC3C,YAAI,CAACH,aAAa,CAACI,QAAd,CAAuBF,OAAvB,CAAL,EAAsC;AACpCF,UAAAA,aAAa,CAACK,IAAd,CAAmBH,OAAnB;AACA,gBAAMI,SAAS,GAAG,MAAMlB,QAAQ,CAACO,OAAT,CAAiBY,YAAjB,CAA8BL,OAA9B,EAAuCL,IAAvC,CAA4C;AAAEC,YAAAA,IAAI,EAAET,QAAQ,CAACC,SAAD,CAAhB;AAA6BS,YAAAA,GAAG,EAAE;AAAlC,WAA5C,CAAxB;AACAP,UAAAA,QAAQ,CAACa,IAAT,CAAc;AAACH,YAAAA,OAAO,EAAEA,OAAV;AAAmBI,YAAAA,SAAS,EAAEA;AAA9B,WAAd;AACD;AACF,OAND;AAOD,KAVD;;AAWAb,IAAAA,qBAAqB;AACrBe,IAAAA,UAAU,CAAC,MAAM;AACfvB,MAAAA,QAAQ,CAACwB,MAAT,CACE,oBAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAEjB,QAA5B;AAAsC,QAAA,cAAc,EAAEH,QAAQ,CAACC,SAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEEC,aAAa,CAACmB,OAFhB;AAID,KALS,EAKP,GALO,CAAV;AAOF;AACC,GAtBQ,EAsBN,EAtBM,CAAT;AAuBA,SACE;AAAK,IAAA,GAAG,EAAEnB,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CA5BD;;AA8BA,eAAeJ,UAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\"\nimport ReactDOM from 'react-dom'\nimport PatientsOverview from \"./PatientsOverview\"\n\nconst DoctorView = ({ contract, accounts, accountId }) => {\n  const doctorViewRef = useRef()\n  useEffect(() => {\n    const patients = []\n    const buildPatientsOverview = async () => {\n      const doctorsPermissions = await contract.methods.getDoctorsPermissions(accounts[accountId]).call({ from: accounts[accountId], gas: 100000 })\n      const seenAddresses = []\n      doctorsPermissions.map(async (address, _) => {\n        if (!seenAddresses.includes(address)) {\n          seenAddresses.push(address)\n          const documents = await contract.methods.getDocuments(address).call({ from: accounts[accountId], gas: 100000 })\n          patients.push({address: address, documents: documents})\n        }\n      })\n    }\n    buildPatientsOverview()\n    setTimeout(() => {\n      ReactDOM.render(\n        <PatientsOverview patients={patients} doctorsAddress={accounts[accountId]}></PatientsOverview>,\n        doctorViewRef.current\n      )\n    }, 500\n    )\n  /* eslint-disable-next-line */\n  }, [])\n  return (\n    <div ref={doctorViewRef}></div>\n  )\n}\n\nexport default DoctorView;"]},"metadata":{},"sourceType":"module"}