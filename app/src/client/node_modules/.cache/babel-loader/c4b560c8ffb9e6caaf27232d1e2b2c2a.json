{"ast":null,"code":"import _slicedToArray from \"/home/karolinag/Documents/ssr2A/Self-Sovereign-Identity-4-Healthcare/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/karolinag/Documents/ssr2A/Self-Sovereign-Identity-4-Healthcare/client/src/components/DoctorsAccessButton.jsx\";\nimport React, { useState } from \"react\";\n\nconst giveAccessToDoctor = async (doctorAddress, contract, accounts, accountId) => {\n  await contract.methods.giveAccessToDoctor(doctorAddress).send({\n    from: accounts[accountId],\n    gas: 100000\n  });\n  const permissions = await contract.methods.getDoctorsPermissions(doctorAddress).call({\n    from: accounts[accountId],\n    gas: 100000\n  });\n  console.log(permissions);\n};\n\nconst revokeAccessFromDoctor = async (doctorAddress, contract, accounts, accountId) => {\n  const doctorsPermissions = await contract.methods.getDoctorsPermissions(doctorAddress).call({\n    from: accounts[accountId],\n    gas: 100000\n  });\n  doctorsPermissions.map(async (address, index) => {\n    if (address === accounts[accountId]) {\n      await contract.methods.revokeAccessFromDoctor(doctorAddress, index).send({\n        from: accounts[accountId],\n        gas: 100000\n      });\n    }\n  });\n};\n\nconst DoctorsAccessButton = ({\n  doctor,\n  contract,\n  accounts,\n  accountId\n}) => {\n  const _useState = useState(doctor.hasAccess),\n        _useState2 = _slicedToArray(_useState, 2),\n        hasAccess = _useState2[0],\n        setHasAccess = _useState2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, hasAccess && React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    onClick: () => {\n      revokeAccessFromDoctor(accounts[doctor.account], contract, accounts, accountId);\n      setHasAccess(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Revoke Access\"), !hasAccess && React.createElement(\"button\", {\n    className: \"btn btn-warning\",\n    onClick: () => {\n      giveAccessToDoctor(accounts[doctor.account], contract, accounts, accountId);\n      setHasAccess(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Give Access\"));\n};\n\nexport default DoctorsAccessButton;","map":{"version":3,"sources":["/home/karolinag/Documents/ssr2A/Self-Sovereign-Identity-4-Healthcare/client/src/components/DoctorsAccessButton.jsx"],"names":["React","useState","giveAccessToDoctor","doctorAddress","contract","accounts","accountId","methods","send","from","gas","permissions","getDoctorsPermissions","call","console","log","revokeAccessFromDoctor","doctorsPermissions","map","address","index","DoctorsAccessButton","doctor","hasAccess","setHasAccess","account"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,kBAAkB,GAAG,OAAOC,aAAP,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0CC,SAA1C,KAAwD;AACjF,QAAMF,QAAQ,CAACG,OAAT,CAAiBL,kBAAjB,CAAoCC,aAApC,EAAmDK,IAAnD,CAAwD;AAAEC,IAAAA,IAAI,EAAEJ,QAAQ,CAACC,SAAD,CAAhB;AAA6BI,IAAAA,GAAG,EAAE;AAAlC,GAAxD,CAAN;AACA,QAAMC,WAAW,GAAG,MAAMP,QAAQ,CAACG,OAAT,CAAiBK,qBAAjB,CAAuCT,aAAvC,EAAsDU,IAAtD,CAA2D;AAAEJ,IAAAA,IAAI,EAAEJ,QAAQ,CAACC,SAAD,CAAhB;AAA6BI,IAAAA,GAAG,EAAE;AAAlC,GAA3D,CAA1B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACD,CAJD;;AAMA,MAAMK,sBAAsB,GAAG,OAAOb,aAAP,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0CC,SAA1C,KAAwD;AACrF,QAAMW,kBAAkB,GAAG,MAAMb,QAAQ,CAACG,OAAT,CAAiBK,qBAAjB,CAAuCT,aAAvC,EAAsDU,IAAtD,CAA2D;AAAEJ,IAAAA,IAAI,EAAEJ,QAAQ,CAACC,SAAD,CAAhB;AAA6BI,IAAAA,GAAG,EAAE;AAAlC,GAA3D,CAAjC;AACAO,EAAAA,kBAAkB,CAACC,GAAnB,CAAuB,OAAOC,OAAP,EAAgBC,KAAhB,KAA0B;AAC/C,QAAID,OAAO,KAAKd,QAAQ,CAACC,SAAD,CAAxB,EAAqC;AACnC,YAAMF,QAAQ,CAACG,OAAT,CAAiBS,sBAAjB,CAAwCb,aAAxC,EAAuDiB,KAAvD,EAA8DZ,IAA9D,CAAmE;AAAEC,QAAAA,IAAI,EAAEJ,QAAQ,CAACC,SAAD,CAAhB;AAA6BI,QAAAA,GAAG,EAAE;AAAlC,OAAnE,CAAN;AACD;AACF,GAJD;AAKD,CAPD;;AASA,MAAMW,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUlB,EAAAA,QAAV;AAAoBC,EAAAA,QAApB;AAA8BC,EAAAA;AAA9B,CAAD,KAA+C;AAAA,oBACvCL,QAAQ,CAACqB,MAAM,CAACC,SAAR,CAD+B;AAAA;AAAA,QAClEA,SADkE;AAAA,QACvDC,YADuD;;AAEzE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,SAAS,IACR;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AACE,IAAA,OAAO,EAAE,MAAM;AACbP,MAAAA,sBAAsB,CAACX,QAAQ,CAACiB,MAAM,CAACG,OAAR,CAAT,EAA2BrB,QAA3B,EAAqCC,QAArC,EAA+CC,SAA/C,CAAtB;AACAkB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,EAUG,CAACD,SAAD,IACC;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AACE,IAAA,OAAO,EAAE,MAAM;AACbrB,MAAAA,kBAAkB,CAACG,QAAQ,CAACiB,MAAM,CAACG,OAAR,CAAT,EAA2BrB,QAA3B,EAAqCC,QAArC,EAA+CC,SAA/C,CAAlB;AACAkB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXJ,CADF;AAsBD,CAxBD;;AA0BA,eAAeH,mBAAf","sourcesContent":["import React, { useState } from \"react\"\n\nconst giveAccessToDoctor = async (doctorAddress, contract, accounts, accountId) => {\n  await contract.methods.giveAccessToDoctor(doctorAddress).send({ from: accounts[accountId], gas: 100000 })\n  const permissions = await contract.methods.getDoctorsPermissions(doctorAddress).call({ from: accounts[accountId], gas: 100000 })\n  console.log(permissions)\n}\n\nconst revokeAccessFromDoctor = async (doctorAddress, contract, accounts, accountId) => {\n  const doctorsPermissions = await contract.methods.getDoctorsPermissions(doctorAddress).call({ from: accounts[accountId], gas: 100000 })\n  doctorsPermissions.map(async (address, index) => {\n    if (address === accounts[accountId]) {\n      await contract.methods.revokeAccessFromDoctor(doctorAddress, index).send({ from: accounts[accountId], gas: 100000 })\n    }\n  })\n}\n\nconst DoctorsAccessButton = ({ doctor, contract, accounts, accountId }) => {\n  const [hasAccess, setHasAccess] = useState(doctor.hasAccess)\n  return (\n    <div>\n      {hasAccess &&\n        <button className='btn btn-success'\n          onClick={() => {\n            revokeAccessFromDoctor(accounts[doctor.account], contract, accounts, accountId)\n            setHasAccess(false)\n          }}>\n          Revoke Access\n        </button>\n      }\n      {!hasAccess &&\n        <button className='btn btn-warning'\n          onClick={() => {\n            giveAccessToDoctor(accounts[doctor.account], contract, accounts, accountId)\n            setHasAccess(true)\n          }}>\n          Give Access\n        </button>\n      }\n    </div >\n  )\n}\n\nexport default DoctorsAccessButton;"]},"metadata":{},"sourceType":"module"}